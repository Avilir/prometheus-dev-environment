# Alternative compose file using Node Exporter instead of PCP
version: '3.8'

services:
  prometheus:
    image: docker.io/prom/prometheus:v2.47.0  # Using specific version from Docker Hub
    container_name: prometheus-dev
    hostname: prometheus-dev
    restart: unless-stopped
    ports:
      - "0.0.0.0:9090:9090"  # Bind to all interfaces for external access
    volumes:
      - ./prometheus/prometheus-node-exporter.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'  # Keep data for 7 days in dev
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'  # Enable config reload via API
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    mem_limit: 1g
    cpus: 1.0

  node-exporter:
    image: docker.io/prom/node-exporter:v1.7.0  # Using specific version from Docker Hub
    container_name: node-exporter
    hostname: test-host
    restart: unless-stopped
    ports:
      - "0.0.0.0:9100:9100"  # Node exporter metrics port
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
      - '--collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$$'
    networks:
      - monitoring
    privileged: false  # Explicitly set to false
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    mem_limit: 128m
    cpus: 0.1

networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

volumes:
  prometheus-data:
    labels:
      project: "prom-dev"
      component: "prometheus"

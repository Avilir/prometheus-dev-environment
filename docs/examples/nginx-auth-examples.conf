# Nginx Authentication Examples for Prometheus
# Author: Dana (AI Assistant)
# Purpose: Example configurations for adding authentication to Prometheus

# ===========================================================================
# 1. Basic Authentication Example
# ===========================================================================

# First, create password file:
# sudo htpasswd -c /etc/nginx/.htpasswd prometheus_user

server {
    listen 80;
    server_name prometheus.example.com;

    location / {
        auth_basic "Prometheus Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ===========================================================================
# 2. Bearer Token Authentication Example
# ===========================================================================

server {
    listen 80;
    server_name prometheus-bearer.example.com;

    location / {
        # Check for bearer token
        if ($http_authorization != "Bearer your-secret-token-here") {
            return 403;
        }
        
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ===========================================================================
# 3. API Token Authentication Example (Custom Header)
# ===========================================================================

server {
    listen 80;
    server_name prometheus-api.example.com;

    location / {
        # Check for API token in custom header
        if ($http_x_api_token != "your-api-token-here") {
            return 403;
        }
        
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ===========================================================================
# 4. Combined Authentication (Basic + IP Whitelist)
# ===========================================================================

server {
    listen 80;
    server_name prometheus-secure.example.com;

    # IP whitelist
    allow 10.50.10.0/24;  # Your network
    allow 192.168.1.0/24; # Another trusted network
    deny all;

    location / {
        # Basic auth on top of IP whitelist
        auth_basic "Prometheus Secure Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ===========================================================================
# 5. SSL/TLS with Authentication
# ===========================================================================

server {
    listen 443 ssl http2;
    server_name prometheus-ssl.example.com;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        auth_basic "Prometheus SSL Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Security headers
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name prometheus-ssl.example.com;
    return 301 https://$server_name$request_uri;
}

# ===========================================================================
# 6. OAuth2 Proxy Example (using oauth2-proxy)
# ===========================================================================

server {
    listen 80;
    server_name prometheus-oauth.example.com;

    location /oauth2/ {
        proxy_pass       http://127.0.0.1:4180;
        proxy_set_header Host                    $host;
        proxy_set_header X-Real-IP               $remote_addr;
        proxy_set_header X-Scheme                $scheme;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
    }

    location = /oauth2/auth {
        proxy_pass       http://127.0.0.1:4180;
        proxy_set_header Host             $host;
        proxy_set_header X-Real-IP        $remote_addr;
        proxy_set_header X-Scheme         $scheme;
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
    }

    location / {
        auth_request /oauth2/auth;
        error_page 401 = /oauth2/sign_in;

        # pass information via X-User and X-Email headers to backend
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        proxy_set_header X-User  $user;
        proxy_set_header X-Email $email;

        # if you enabled --pass-access-token
        auth_request_set $token  $upstream_http_x_auth_request_access_token;
        proxy_set_header X-Access-Token $token;

        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ===========================================================================
# 7. Rate Limiting Example
# ===========================================================================

# Define rate limit zones
limit_req_zone $binary_remote_addr zone=prometheus_limit:10m rate=10r/s;

server {
    listen 80;
    server_name prometheus-limited.example.com;

    location / {
        # Apply rate limiting
        limit_req zone=prometheus_limit burst=20 nodelay;
        
        # Basic auth
        auth_basic "Prometheus Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://localhost:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
